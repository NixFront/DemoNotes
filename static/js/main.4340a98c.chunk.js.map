{"version":3,"sources":["components/Note/note.js","components/NoteList/NoteList.js","App.js","serviceWorker.js","index.js"],"names":["Note","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","removeNote","bind","assertThisInitialized","e","preventDefault","deleteNote","noteId","letters","split","color","i","Math","round","random","react_default","a","createElement","className","style","backgroundColor","getRandomColor","noteName","noteText","onClick","Component","NoteList","addNote","notes","values","isDeleted","divs","document","getElementsByClassName","length","splice","id","j","_this2","top","opacity","console","log","noteDeleted","animationDone","push","timerId","setInterval","setTimeout","clearInterval","countDeleted","updateNotes","getElementById","value","newNote","alert","_this3","map","note","Note_note","key","type","placeholder","required","renderNotes","App","state","1","2","3","newNotes","setState","components_NoteList_NoteList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4340a98c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Note extends Component {\r\n\t\tconstructor(props) {\r\n        super(props);\r\n        this.removeNote = this.removeNote.bind(this);\r\n    }\r\n\tremoveNote(e){\r\n\t\te.preventDefault();\r\n\t\tthis.props.deleteNote(this.props.noteId);\r\n\t}\r\n\tgetRandomColor() {\r\n    let letters = '0123456789ABCDEF'.split('');\r\n    let color = '#';\r\n    for (let i = 0; i < 6; i++ ) {\r\n        color += letters[Math.round(Math.random() * 15)];\r\n    }\r\n    return color;\r\n}\r\n  render() {\r\n    return (\r\n      <div className = \"noteList__noteItem-item\" style = {{backgroundColor: this.getRandomColor()}}>\r\n      \t<h1>{this.props.noteName}</h1>\r\n      \t<p>{this.props.noteText}</p>\r\n      <i onClick = {this.removeNote} className=\"far fa-times-circle\"></i>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Note;","import React, { Component } from 'react';\r\nimport Note from '../Note/note.js';\r\n\r\nclass NoteList extends Component {\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.removeNote = this.removeNote.bind(this);\r\n        this.addNote = this.addNote.bind(this);\r\n        this.notes = Object.values(this.props.notes);\r\n        this.isDeleted = [];\r\n        this.divs = document.getElementsByClassName('noteList__noteItem-item');\r\n    }\r\n    deleteNote(notes){\r\n    \tfor (var i = 0; i < notes.length; i++) {\r\n    \t\tif (notes[i].isDeleted) {\r\n    \t\t\tthis.notes.splice(i,1);\r\n    \t\t}\r\n    \t}\r\n    }\r\n\tremoveNote(id){\r\n\t\tlet top = 0;\r\n\t\tlet opacity = 1;\r\n\t\tlet j;\r\n\t\t  for (var i = 0; i < this.notes.length; i++) {\r\n\t    \tif (this.notes[i].id === id) {\r\n\t    \t\tthis.notes[i].isDeleted = true;\r\n\t    \t\tconsole.log(this.notes);\r\n\t\t\t\tj = i;\r\n\t\t\t\tlet noteDeleted = {\r\n\t\t\t\t\tid: id,\r\n\t\t\t\t\tanimationDone: false\r\n\t\t\t\t};\r\n\t\t\t\tthis.isDeleted.push(noteDeleted);\r\n\t\t\t\tlet timerId =  setInterval(() => {\r\n\t\t\t\t\ttop += 10;\r\n\t\t\t\t\topacity -= 0.2;\r\n\t\t\t\t\t this.divs[j].style.top = top + \"px\";\r\n\t\t\t\t\tthis.divs[j].style.opacity = opacity;\r\n\t\t\t\t},100);\r\n\t\t\t\tsetTimeout( () => {\r\n\t\t\t\t\tthis.deleteNote(this.notes);\r\n\t\t\t\t   for (var i = 0; i < this.isDeleted.length; i++) {\r\n\t\t\t\t   \tif (this.isDeleted[i].id === id) {\r\n\t\t\t\t   \t\tthis.isDeleted[i].animationDone = true;\r\n\t\t\t\t   \t}\r\n\t\t\t\t   }\r\n\t\t\t\t   console.log(this.notes);\r\n\t\t\t\t   clearInterval(timerId);\r\n\t\t\t\t   let countDeleted = 0;\r\n\t\t\t\t   for (i = 0; i < this.isDeleted.length; i++) {\r\n\t\t\t\t   \tif (this.isDeleted[i].animationDone) {\r\n\t\t\t\t   \t\tcountDeleted++;  \t\t\r\n\t\t\t\t   \t}\r\n\t\t\t\t   }\r\n\t\t\t\t   if (countDeleted === this.isDeleted.length) {\r\n\t\t\t\t   \tthis.props.updateNotes(this.notes);\r\n\t\t\t\t   \tthis.divs = document.getElementsByClassName('noteList__noteItem-item');\r\n\t\t\t\t   }\r\n\t\t\t\t}, 3000);\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\taddNote(e){\r\n\t\te.preventDefault();\r\n\t\tlet noteName,noteText;\r\n\t\tnoteName = document.getElementById(\"noteName\");\r\n\t\tnoteText = document.getElementById(\"noteText\");\r\n\t\tif (noteName.value !== '' && noteText.value !== '') {\r\n\t\t\tnoteName = noteName.value;\r\n\t\t\tnoteText = noteText.value;\r\n\t\t}\r\n\t\telse{\r\n\t\t\talert('Note Name or note Text empty');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet newNote = {\r\n\t\t\tid : this.notes.length + 1,\r\n\t\t\tnoteName: noteName,\r\n\t\t\tnoteText : noteText,\r\n\t\t\tisDeleted : false\r\n\t\t}\r\n\t\tthis.notes.push(newNote);\r\n\t\tthis.props.updateNotes(this.notes);\r\n\t\tdocument.getElementById(\"noteName\").value = \"\";\r\n\t\tdocument.getElementById(\"noteText\").value = \"\";\r\n\t\tthis.divs = document.getElementsByClassName('noteList__noteItem-item');\r\n\t}\r\n\t renderNotes(){\r\n\t\tconst notes = Object.values(this.props.notes);\r\n\t\treturn notes.map((note) => <Note key = {note.id} deleteNote = {this.removeNote} noteId = {note.id} noteName = {note.noteName} noteText = {note.noteText} />);\r\n\t}\r\n  render() {\r\n    return (\r\n      <div className = 'noteList'>\r\n      \t<form className = 'noteList__form'>\r\n      \t\t<input \r\n\t      \t\tid = 'noteName' \r\n\t      \t\ttype = \"text\" \r\n\t      \t\tplaceholder = \"Note Name\" \r\n\t      \t\trequired \r\n      \t\t/>\r\n      \t\t<textarea id = 'noteText' \r\n\t      \t\tplaceholder = \"Note text\"  \r\n\t      \t\trequired \r\n      \t\t/>\r\n      \t\t<button type=\"reset\" onClick = {this.addNote}>Add</button>\r\n      \t</form>\r\n      \t<div className = \"noteList__noteItem\">\r\n      \t\t{this.renderNotes()}\r\n      \t</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NoteList;","import React, { Component } from 'react';\nimport './App.css';\nimport NoteList from  './components/NoteList/NoteList.js';\n\nclass App extends Component {\n    state = {\n    notes:{\n      1: {\n        id: 1,\n        noteName: \"Note 1\",\n        noteText: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Officiis est ipsum soluta ducimus enim, perferendis rem sint similique amet, aspernatur quod repellendus dolor quas eveniet. Nisi odio inventore at ipsa.\",\n        isDeleted: false\n      },\n      2: {\n        id: 2,\n        noteName: \"Note 2\",\n        noteText: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Officiis est ipsum soluta ducimus enim, perferendis rem sint similique amet, aspernatur quod repellendus dolor quas eveniet. Nisi odio inventore at ipsa.\",\n        isDeleted: false\n      },\n      3: {\n        id: 3,\n        noteName: \"Note 3\",\n        noteText: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Officiis est ipsum soluta ducimus enim, perferendis rem sint similique amet, aspernatur quod repellendus dolor quas eveniet. Nisi odio inventore at ipsa.\",\n        isDeleted: false\n      }\n    }\n  }\n  updateNotes(newNotes){\n    this.setState((state, props) => {\n      return {notes: newNotes};\n    });\n  }\n  render() {\n    return (\n        <NoteList notes = {this.state.notes} updateNotes = {this.updateNotes.bind(this)}/>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}